version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
  pre_build:
    commands:
      - docker --version
      - aws --version
      # - aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email
      - docker login -u AWS -p $(aws ecr get-login-password --region ap-south-1) 775422423362.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=775422423362.dkr.ecr.ap-south-1.amazonaws.com/react_application
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build=$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo Installing source NPM dependencies...
      - npm install
      - echo Installing trivy
      - cp trivy.repo /etc/yum.repos.d/
      - yum -y update
      - yum -y install trivy
  build:
    commands:
      - echo Build started on `date`
      - npm run build
      - echo buildin docker image...
      # - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker build -t $REPOSITORY_URI .
      - echo Scanning docker image using trivy
      - trivy image --timeout 10m --severity HIGH,CRITICAL $REPOSITORY_URI --output trivy_image_report.json
  post_build:
    commands:
      - echo npm build completed
      - echo docker image $REPOSITORY_URI
      # - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI
      - echo Writing image defenition file ...
      # - printf '[{"name": "react_application", "imageUri": "%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefenitions.json
      - echo $REPOSITORY_URI:$IMAGE_TAG > imagedefenitions.json
      - cat imagedefenitions.json
      - cat trivy_image_report.json

artifacts:
  commnds:
    - ls
  files:
    - '**/*'
    - imagedefenitions.json
    - trivy_image_report.json
    #- "build/**/*"
  base-directory: 'build'
  #discard-paths: yes
